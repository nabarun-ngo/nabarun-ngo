name: Deploy Application to PROD
on: 
  workflow_dispatch
  
jobs:
  build:
    # This job runs on push events, specifically after PRs are merged into main
    # needs: test
    #if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Latest Tag
        id: get_tag
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0 || echo "0.0.0")
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV
      
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.latest_tag }}

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17' 
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-   

      - name: Get JAR file path
        id: get-jar-path
        run: |
          ORIGINAL_JAR=$(find ngo-nabarun-app/target -name "*.jar" | grep -v "sources.jar" | grep -v "javadoc.jar")
          JAR_PATH="ngo-nabarun-app/target/app.jar"
          mv "${ORIGINAL_JAR}" "${JAR_PATH}"
          echo "JAR_PATH=${JAR_PATH}" >> $GITHUB_ENV
          echo "Renamed JAR file path: ${JAR_PATH}"

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: ${{ env.JAR_PATH }}
          retention-days: 1
          
      - name: Upload app.yaml artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-yaml
          path: app.yaml
          retention-days: 1
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:   
      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: app-jar
          
      - name: Download app.yaml artifact
        uses: actions/download-artifact@v3
        with:
          name: app-yaml
      - name: Setup Google Cloud CLI
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
        
      - name: Setup Application Variables
        uses: ikuanyshbekov/app-yaml-env-compiler@v1.0
        with:
          path: "app.yaml"
        env:
         ENVIRONMENT: ${{ vars.APP_ENV }} 
         DOPPLER_PROJECT_NAME: ${{ vars.DOPPLER_PROJECT_NAME }} 
         DOPPLER_SERVICE_TOKEN: ${{ secrets.DOPPLER_SERVICE_TOKEN }}  
         LOG_LEVEL: ${{ vars.LOG_LEVEL }} 
         
      - name: Deploy to Google App Engine
        uses: google-github-actions/deploy-appengine@v2
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          credentials: ${{ secrets.GCP_SA_KEY }}
          promote: true
          version: auto # Automatically generate a version ID
          deliverables: app.jar
          flags: '--appyaml=app.yaml'
